!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@fortawesome/free-solid-svg-icons"),require("@fortawesome/angular-fontawesome"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-weblineindia-password",["exports","@angular/core","@fortawesome/free-solid-svg-icons","@fortawesome/angular-fontawesome","@angular/forms","@angular/common"],n):n(e["angular-weblineindia-password"]={},e.ng.core,null,null,e.ng.forms,e.ng.common)}(this,function(e,n,o,s,t,r){"use strict";var a=function(){function e(){}return e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=n.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),i=function(){function e(){this.faEye=o.faEye,this.faEyeSlash=o.faEyeSlash,this.paswordMinLength=3,this.paswordMaxLength=255,this.passwordFieldType="password",this.disabled=!1,this.tabindex=1,this.id="password",this.name="password",this.placeholder="password",this.passwordErrorName="The password field must be at least 3 characters",this.isViewPassword=!0,this.change=new n.EventEmitter,this.focus=new n.EventEmitter,this.blur=new n.EventEmitter}return e.prototype.onFocus=function(e){this.focus.emit(e)},e.prototype.onBlur=function(e){this.blur.emit(e)},e.prototype.onChange=function(e){this.change.emit(e)},e.prototype.passwordVisibility=function(){this.passwordFieldType="password"===this.passwordFieldType?"text":"password"},e.decorators=[{type:n.Component,args:[{selector:"lib-password",template:'<input\n  [type]="passwordFieldType"\n  class="form-control"\n  [placeholder]="placeholder"\n  [ngModel]="value"\n  [name]="name"\n  [id]="id"\n  #password="ngModel"\n  [disabled]="disabled"\n  [tabindex]="tabindex"\n  [minlength]="paswordMinLength"\n  [maxlength]="paswordMaxLength"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  (input)="onChange($event)"\n  autofocus\n/>\n\n<span *ngIf="isViewPassword">\n  <span *ngIf="value" class="password-eye">\n    <span *ngIf="passwordFieldType === \'text\'">\n      <fa-icon [icon]="faEye" (click)="passwordVisibility()"></fa-icon>\n    </span>\n    <span *ngIf="passwordFieldType === \'password\'">\n      <fa-icon [icon]="faEyeSlash" (click)="passwordVisibility()"></fa-icon>\n    </span>\n  </span>\n</span>\n\n<div class="md-errors-spacer" *ngIf="password.invalid && password.touched">\n  <div *ngIf="password.errors && password.invalid">\n    <p class="error-text">{{ passwordErrorName }}</p>\n  </div>\n</div>\n',styles:[".form-control{width:50%;padding:12px 20px;margin:8px 0;display:inline-block;border:1px solid #ccc;box-sizing:border-box}.error-text{color:red}"]}]}],e.propDecorators={paswordMinLength:[{type:n.Input}],paswordMaxLength:[{type:n.Input}],passwordFieldType:[{type:n.Input}],disabled:[{type:n.Input}],value:[{type:n.Input}],tabindex:[{type:n.Input}],id:[{type:n.Input}],name:[{type:n.Input}],placeholder:[{type:n.Input}],passwordErrorName:[{type:n.Input}],isViewPassword:[{type:n.Input}],change:[{type:n.Output}],focus:[{type:n.Output}],blur:[{type:n.Output}]},e}(),p=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[s.FontAwesomeModule,t.FormsModule,t.ReactiveFormsModule,r.CommonModule],declarations:[i],exports:[i]}]}],e}();e.PasswordService=a,e.PasswordComponent=i,e.PasswordModule=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-weblineindia-password.umd.min.js.map